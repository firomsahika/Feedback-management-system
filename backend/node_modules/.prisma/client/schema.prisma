generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  student
}

enum CourseType {
  Lecture
  Tutorial
  Lab
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())

  // Relations

  assignedTeachers Teacher[]      @relation("AssignedTeachers")
  studentClasses   StudentClass[]
  student          Student?
  feedbacks        Feedback[]
}

model Student {
  id        Int    @id @default(autoincrement())
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique
  programme String
  semester  String
  gender    String
  batch     String
}

model Class {
  id         String @id @default(uuid())
  className  String
  accessCode String @unique
  createdBy  String

  studentClasses StudentClass[]
  // teacherCourses TeacherCourse[]
}

model StudentClass {
  id        String @id @default(uuid())
  studentId String
  classId   String

  student User  @relation(fields: [studentId], references: [id])
  class   Class @relation(fields: [classId], references: [id])
}

model Course {
  id          String     @id @default(uuid())
  courseName  String     @unique
  courseCode  String
  courseType  CourseType
  teacherName String
}

model Teacher {
  id         String  @id @default(uuid())
  name       String
  email      String?
  assignedBy String
  assigner   User    @relation("AssignedTeachers", fields: [assignedBy], references: [id])
}

model TeacherCourse {
  id        String @id @default(uuid())
  teacherId String
  courseId  String
  classId   String
}

model FeedbackParameter {
  id            String     @id @default(uuid())
  parameterName String
  parameterType CourseType
  courseName    String
  teacherName   String
  feedbacks     Feedback[]
}

model Feedback {
  id          String   @id @default(uuid())
  userId      String
  parameterId String
  rating      Int
  comment     String?
  createdAt   DateTime @default(now())

  user      User              @relation(fields: [userId], references: [id])
  parameter FeedbackParameter @relation(fields: [parameterId], references: [id])
}
