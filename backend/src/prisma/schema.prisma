generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  INSTRUCTOR
  FACULTY
  DEPARTMENT
  ADMIN
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  role           Role
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Role-Specific Fields (Nullable)
  studentId      String?  // Student-specific ID
  programme      String?
  semester       String?
  gender         String?
  batch          String?

  instructorName String?
  course         String?
  instructorDepartment String?

  
  departmentName String?
  facultyName    String?


  feedbacks FeedbackSubmission[]
}

model FeedbackQuestion {
  id       Int    @id @default(autoincrement())
  text     String
  type     String  // "RATING", "YES_NO", "TEXT"
  createdAt DateTime @default(now())

  responses FeedbackResponse[]
}

model FeedbackSubmission {
  id        Int    @id @default(autoincrement())
  userId    Int
  submittedAt DateTime @default(now())

  user      User @relation(fields: [userId], references: [id])
  responses FeedbackResponse[]
}

model FeedbackResponse {
  id         Int    @id @default(autoincrement())
  feedbackId Int
  questionId Int
  rating     Int?   // 0-5 for rating questions
  yesNo      Boolean? // Yes/No responses
  textAnswer String? // Text responses

  feedback   FeedbackSubmission @relation(fields: [feedbackId], references: [id])
  question   FeedbackQuestion @relation(fields: [questionId], references: [id])
}